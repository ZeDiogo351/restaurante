<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='styles.css') }}">
</head>
<body>
    <header>
        <div class="header-overlay">
            <h1>Admin Dashboard</h1>
            <nav>
                <a href="{{ url_for('index') }}">Home</a>
                <a href="{{ url_for('logout') }}">Logout</a>
                <button id="dark-mode-toggle" class="dark-mode-btn">Toggle Dark Mode</button>
            </nav>
        </div>
    </header>
    
    <main>
        {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                {% for category, message in messages %}
                    <div class="flash {{ category }}">{{ message }}</div>
                {% endfor %}
            {% endif %}
        {% endwith %}
        
        <h2>Manage Menu</h2>
        
        <form method="POST" action="{{ url_for('add_menu') }}">
            <label for="name">Nome:</label>
            <input type="text" id="name" name="name" required>
            <label for="description">Descrição:</label>
            <textarea id="description" name="description" required></textarea>
            <label for="price">Preço(€):</label>
            <input type="number" step="0.01" id="price" name="price" required>
            <label for="category">Categoria:</label>
            <select id="category" name="category" required>
                <option value="Appetizer">Entrada</option>
                <option value="Main Course">Prato principal</option>
                <option value="Dessert">Sobremesa</option>
                <option value="Beverage">Bebida</option>
            </select>
            <button type="submit">Adicionar</button>
        </form>
        
        <h3>Menu Items</h3>
        <table>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Category</th>
                <th>Action</th>
            </tr>
            {% for item in menu_items %}
            <tr>
                <td>{{ item[1] }}</td>
                <td>{{ item[2] }}</td>
                <td>€{{ item[3] }}</td>
                <td>{{ item[4] }}</td>
                <td><a href="{{ url_for('delete_menu', id=item[0]) }}">Delete</a></td>
            </tr>
            {% endfor %}
        </table>
        
        <h3>Manage Reservations</h3>
        <table>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Date</th>
                <th>Time</th>
                <th>People</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
            {% for res in reservations %}
            <tr>
                <td>{{ res[1] }}</td>
                <td>{{ res[2] }}</td>
                <td>{{ res[3] }}</td>
                <td>{{ res[4] }}</td>
                <td>{{ res[5] }}</td>
                <td>{{ res[6] }}</td>
                <td>
                    <form method="POST" action="{{ url_for('update_status', id=res[0]) }}">
                        <select name="status">
                            <option value="Pending" {% if res[6] == 'Pending' %}selected{% endif %}>Pending</option>
                            <option value="Confirmed" {% if res[6] == 'Confirmed' %}selected{% endif %}>Confirmed</option>
                            <option value="Cancelled" {% if res[6] == 'Cancelled' %}selected{% endif %}>Cancelled</option>
                        </select>
                        <button type="submit">Update</button>
                    </form>
                </td>
            </tr>
            {% endfor %}
        </table>
    </main>

    <script>
        // Modo escuro global
        const darkModeToggle = document.getElementById('dark-mode-toggle');
        const body = document.body;

        function updateTheme() {
            const savedTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
            body.dataset.theme = savedTheme;
            darkModeToggle.textContent = savedTheme === 'dark' ? 'Toggle Light Mode' : 'Toggle Dark Mode';
        }

        darkModeToggle.addEventListener('click', function() {
            body.dataset.theme = body.dataset.theme === 'dark' ? 'light' : 'dark';
            localStorage.setItem('theme', body.dataset.theme);
            darkModeToggle.textContent = body.dataset.theme === 'dark' ? 'Toggle Light Mode' : 'Toggle Dark Mode';
            const event = new Event('themeChanged');
            window.dispatchEvent(event);
        });

        // Inicializar tema ao carregar
        updateTheme();

        // Escutar mudanças de tema em todas as páginas
        window.addEventListener('themeChanged', updateTheme);
    </script>
</body>
</html>